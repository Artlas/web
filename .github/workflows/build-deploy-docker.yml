name: Build & publish to Github Registry

on:
    pull_request:
        branches: ["main"]
    push:
        branches: ["main"]

jobs:
    push_to_registry:
        name: Push Docker image to Github Registry
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repo
              uses: actions/checkout@v3

            - name: Determine Tag
              run: |
                  echo "TAG=staging" >> $GITHUB_ENV
                  echo "docker=artlas-staging" >> $GITHUB_ENV
              if: github.event_name == 'pull_request'

            - name: Determine Tag2
              run: |
                  echo "TAG=prod" >> $GITHUB_ENV
                  echo "docker=artlas-production" >> $GITHUB_ENV
              if: github.event_name != 'pull_request'

            - name: Set up Python
              uses: actions/setup-python@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  push: true
                  tags: ghcr.io/artlas/web:${{ env.TAG }}

            - name: install and decrypt ejson
              run: |
                  wget https://github.com/Shopify/ejson/releases/download/v1.4.1/ejson_1.4.1_linux_amd64.tar.gz
                  tar -xf ejson_1.4.1_linux_amd64.tar.gz 
                  mkdir -p /opt/ejson/keys
                  echo ${{ secrets.EJSON_PRIVATE }} > /opt/ejson/keys/${{ secrets.EJSON_PUBLIC }}
                  ./ejson decrypt service_account_deploy.ejson -o service_account_deploy.json

            - name: "Reload docker on server"
              run: |
                  pip3 install google-auth
                  export IAP_CLIENT_ID=${{ secrets.IAP_CLIENT_ID }}
                  export GOOGLE_APPLICATION_CREDENTIALS=service_account_deploy.json
                  python3 reload_request.py ${{ env.docker }} ${{ env.TAG }}
